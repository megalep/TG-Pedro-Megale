// Coleta dados analogicos do conversor AD;
// A taxa de amostragem eh controlada por um Timer via hardware
// O programa funciona da seguinte forma:
//   - inicia a coleta no setup();
//   - ao completar o buffer, pausa o timer e liga a flag_lido;
//   - transmite os dados coletados por Serial;
//   - aguarda 1000ms e reicinia o Timer e, com isso, a coleta.
// Enquanto isso, cria um PWM (por software) na porta PB0 de frequencia aproximada sampleFreqkHz/50.
//   - se ligar a porta A0 na porta B0, deverao aparecer aprox 10 ciclos quadrados no Plotter Serial,
//     independentemente da frequencia usada...

#include <HardwareTimer.h>
#include <STM32ADC.h>

#define pinLED  PC13 // LED interno da placa
#define pinOUT  PB0

// Channels to be acquired.
// A0 (adc1 channel 1)
uint8 pins = 0;

#define maxSamples  500 // Numero de amostras a serem lidas de cada vez
uint16_t buffer[maxSamples];
uint8_t flag_lido;
uint16_t contador;
uint16_t a[maxSamples];

uint16_t contador_medidas;
float amplitude;
float fase;
float piE[3][476]{
{0,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  0.0000, 0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  0.0000, 0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  0.0000, 0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  0.0000, 0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  0.0000, 0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  -0.0000,  0.0010, 0.0020, 0.0029, 0.0036, 0.0040, 0.0042, 0.0041, 0.0038, 0.0032, 0.0025, 0.0015, 0.0005, -0.0005,  -0.0015,  -0.0025,  -0.0032,  -0.0038,  -0.0041,  -0.0042,  -0.0040,  -0.0036,  -0.0029,  -0.0020,  -0.0010,  0.0000},
{0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042, 0.0041, 0.0037, 0.0030, 0.0022, 0.0013, 0.0003, -0.0008,  -0.0018,  -0.0027,  -0.0034,  -0.0039,  -0.0042,  -0.0042,  -0.0039,  -0.0034,  -0.0027,  -0.0018,  -0.0008,  0.0003, 0.0013, 0.0022, 0.0030, 0.0037, 0.0041, 0.0042},
{}
};

#define numero_medidas 476

#define sampleFreqKhz       500
#define samplePeriodus      1000 / sampleFreqKhz
#define ticksPerSecond      2 * sampleFreqKhz * 1000 / maxSamples

STM32ADC myADC(ADC1);

void TimerIRQ(void) { // O timer serve soh como trigger do ADC... 1 a cada amostra
}

void DmaIRQ(void) { // Completou o buffer...
Timer3.pause();
flag_lido = 1;
digitalWrite(pinLED, ! digitalRead(pinLED)); // altera estado do LED
}

// este trecho é apenas para facilitar a conversão do seno e cosseno entre binário e float:
typedef union {
float floatingPoint;
byte binary[4];
} binaryFloat;

// declaração das variáveis que podem ser usadas como byte ou como float:
binaryFloat seno;
binaryFloat cosseno;

void setup() {

pinMode(pinLED, OUTPUT);
pinMode(pinOUT, OUTPUT);
pinMode(pins, INPUT_ANALOG);

Serial.begin(115200);

flag_lido = 0;
contador = 0;

Timer3.setPeriod(samplePeriodus);
Timer3.setMasterModeTrGo(TIMER_CR2_MMS_UPDATE);

myADC.calibrate();
myADC.setSampleRate(ADC_SMPR_1_5); // a cada trigger, a conversao eh feita o mais rapido possivel.
                     // Talvez de para diminuir para melhorar acuracia da medida.
myADC.setPins(&pins, 1);

// Configurando DMA com:
// - DMA_MINC_MODE: Auto-increment memory address
// - DMA_CIRC_MODE: Circular mode
// - DMA_TRNS_CMPLT: Interrupt on transfer completion
myADC.setDMA(buffer, maxSamples, (DMA_MINC_MODE | DMA_CIRC_MODE | DMA_TRNS_CMPLT), DmaIRQ);

myADC.setTrigger(ADC_EXT_EV_TIM3_TRGO); // ajusta Timer3 como trigger
myADC.startConversion();
}

void loop() {

    if (flag_lido == 1) 
    {
        // process data
        int nn;
        int ntotal = maxSamples;
        //for (nn=0; nn<ntotal; nn++)
        //{
          //  Serial.println(buffer[nn]); // Envia dados pela serial como ASCII, para ser visto com o 'Plotter Serial'
        //}
        int i;
        seno.floatingPoint = 0;
        cosseno.floatingPoint = 0;
        for (i = 0; i < numero_medidas; i++) 
        { // esta eh a multiplicação feita no matlab
            seno.floatingPoint += (float)buffer[i]*(float)piE[0][i];
            cosseno.floatingPoint += (float)buffer[i]*(float)piE[1][i];
        } 

        //Serial.println(seno.floatingPoint);
        //Serial.println(cosseno.floatingPoint);
        amplitude = sqrt(seno.floatingPoint*seno.floatingPoint + cosseno.floatingPoint*cosseno.floatingPoint);
        fase = atan2(cosseno.floatingPoint,seno.floatingPoint);

        Serial.println(amplitude);
        Serial.println(fase); 
       
        flag_lido=0;
        //delay(3000); // aguarda 1000ms (1s)
        Timer3.resume(); // reinicia o timer e o ADC
    }
}
